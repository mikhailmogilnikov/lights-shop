server {
    listen 80;
    server_name localhost;

    # Заголовки для CORS
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    add_header 'Access-Control-Max-Age' '86400' always;

    # Обработка preflight запросов
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Проверка работоспособности API Gateway
    location /health {
        return 200 '{"status":"ok","service":"api-gateway"}';
        add_header Content-Type application/json;
    }

    # Проксирование запросов к product-service
    location /api/products {
        # Удаляем /api из пути (обработка как с параметрами, так и без)
        rewrite ^/api/products(/.*)?$ /products$1 break;
        
        proxy_pass http://product-service:${PRODUCT_SERVICE_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Проксирование запросов к order-service
    location /api/orders {
        # Удаляем /api из пути (обработка как с параметрами, так и без)
        rewrite ^/api/orders(/.*)?$ /orders$1 break;
        
        proxy_pass http://order-service:${ORDER_SERVICE_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Для внутренних запросов добавляем доступ к интерфейсам микросервисов
    location /_internal/ {
        return 403;  # Запрещаем доступ извне к внутренним API
    }

    # Для всех остальных запросов возвращаем 404
    location / {
        return 404;
    }
} 